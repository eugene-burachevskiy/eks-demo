apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-dashboard

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
{{- if .Values.global.labels }}
{{ toYaml .Values.global.labels | indent 4 }}
{{- end }}
    app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
{{- if .Values.global.labels }}
{{ toYaml .Values.global.labels | indent 4 }}
{{- end }}
    app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
rules:
  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-certs", "kubernetes-dashboard-csrf"]
    verbs: ["get", "update", "delete"]
    # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["kubernetes-dashboard-settings"]
    verbs: ["get", "update"]
    # Allow Dashboard to get metrics.
  - apiGroups: [""]
    resources: ["services"]
    resourceNames: ["heapster", "dashboard-metrics-scraper"]
    verbs: ["proxy"]
  - apiGroups: [""]
    resources: ["services/proxy"]
    resourceNames: ["heapster", "http:heapster:", "https:heapster:", "dashboard-metrics-scraper", "http:dashboard-metrics-scraper"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
{{- if .Values.global.labels }}
{{ toYaml .Values.global.labels | indent 4 }}
{{- end }}
    app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
{{- if .Values.global.labels }}
{{ toYaml .Values.global.labels | indent 4 }}
{{- end }}
    app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard

---
apiVersion: v1
kind: Secret
metadata:
  labels:
{{- if .Values.global.labels }}
{{ toYaml .Values.global.labels | indent 4 }}
{{- end }}
    app: kubernetes-dashboard
  name: kubernetes-dashboard-certs
  namespace: kubernetes-dashboard
type: Opaque

---
apiVersion: v1
kind: Secret
metadata:
  labels:
{{- if .Values.global.labels }}
{{ toYaml .Values.global.labels | indent 4 }}
{{- end }}
    app: kubernetes-dashboard
  name: kubernetes-dashboard-csrf
  namespace: kubernetes-dashboard
type: Opaque
data:
  csrf: ""

---
apiVersion: v1
kind: Secret
metadata:
  labels:
{{- if .Values.global.labels }}
{{ toYaml .Values.global.labels | indent 4 }}
{{- end }}
    app: kubernetes-dashboard
  name: kubernetes-dashboard-key-holder
  namespace: kubernetes-dashboard
type: Opaque

---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
{{- if .Values.global.labels }}
{{ toYaml .Values.global.labels | indent 4 }}
{{- end }}
    app: kubernetes-dashboard
  name: kubernetes-dashboard-settings
  namespace: kubernetes-dashboard

---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
{{- if .Values.global.labels }}
{{ toYaml .Values.global.labels | indent 4 }}
{{- end }}
    app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kubernetes-dashboard
  template:
    metadata:
      labels:
        app: kubernetes-dashboard
    spec:
      nodeSelector:
{{- if .Values.dashboard.nodeselector }}
{{ toYaml .Values.dashboard.nodeselector | indent 8 }}
{{- end }}
      tolerations:
{{- if .Values.dashboard.tolerations }}
{{ toYaml .Values.dashboard.tolerations | indent 8 }}
{{- end }}
      containers:
        - name: kubernetes-dashboard
          image: kubernetesui/dashboard:{{ .Values.dashboard.tag }}
          imagePullPolicy: {{ .Values.dashboard.pullpolicy }}
          resources:
{{- if .Values.dashboard.resources }}
{{ toYaml .Values.dashboard.resources | indent 12 }}
{{- end }}
          ports:
            - containerPort: 9090
              protocol: TCP
          args:
            - --namespace=kubernetes-dashboard
            - --token-ttl=86400
            - --metrics-provider=none
            - --insecure-port=9090
            - --enable-insecure-login=true
            - --enable-skip-login
          volumeMounts:
            - name: kubernetes-dashboard-certs
              mountPath: /certs
            - name: tmp-volume
              mountPath: /tmp             
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
      volumes:
        - name: kubernetes-dashboard-certs
          secret:
            secretName: kubernetes-dashboard-certs
        - name: tmp-volume
          emptyDir: {}
      serviceAccountName: kubernetes-dashboard

---
kind: Service
apiVersion: v1
metadata:
  labels:
{{- if .Values.global.labels }}
{{ toYaml .Values.global.labels | indent 4 }}
{{- end }}
    app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  ports:
    - name: http-dashboard
      port: {{ .Values.dashboard.service.port }}
      targetPort: 9090
      protocol: TCP
  selector:
    app: kubernetes-dashboard
